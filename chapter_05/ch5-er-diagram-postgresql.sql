-- PostgreSQL Script
-- Generated by ChatGPT
-- Date: 2023-09-27

-- Drop the database if it already exists
DROP DATABASE IF EXISTS mydb;

-- Create the 'mydb' database
CREATE DATABASE mydb;

-- Connect to the 'mydb' database
\c mydb

-- Table 'user'
CREATE TABLE "user" (
    "email" VARCHAR(320) NOT NULL,
    "username" VARCHAR(30) NOT NULL,
    "password" VARCHAR(20) NOT NULL,
    "first_name" VARCHAR(50) NOT NULL,
    "last_name" VARCHAR(50) NOT NULL,
    "address" VARCHAR(255) NOT NULL,
    "phone_number" VARCHAR(15) NOT NULL,
    "last_login_time" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "PK_user" PRIMARY KEY ("email"),
    CONSTRAINT "UQ_Username" UNIQUE ("username")
);

-- Table 'product'
CREATE TABLE "product" (
    "code" CHAR(12) NOT NULL,
    "name" VARCHAR(100) NOT NULL,
    "description" TEXT NOT NULL,
    "manufacturer" VARCHAR(100) NOT NULL,
    "photo" VARCHAR(1000),
    "price" DECIMAL(7,2) NOT NULL,
    "cost" DECIMAL(7,2) NOT NULL,
    "inventory_quantity" INT NOT NULL DEFAULT 0,
    CONSTRAINT "PK_product" PRIMARY KEY ("code")
);

-- Table 'review'
CREATE TABLE "review" (
    "review_id" SERIAL NOT NULL,
    "review_text" TEXT NOT NULL,
    "review_time" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "email" VARCHAR(320) NOT NULL,
    "code" CHAR(12) NOT NULL,
    CONSTRAINT "PK_review" PRIMARY KEY ("review_id"),
    CONSTRAINT "FK_review_user" FOREIGN KEY ("email") REFERENCES "user" ("email"),
    CONSTRAINT "FK_review_product" FOREIGN KEY ("code") REFERENCES "product" ("code")
);

-- Table 'payment_method'
CREATE TABLE "payment_method" (
    "payment_id" SERIAL NOT NULL,
    "name" VARCHAR(30) NOT NULL,
    "card_number" CHAR(16) NOT NULL,
    "expiry_date" CHAR(4) NOT NULL,
    "csc" CHAR(4) NOT NULL,
    "billing_address" VARCHAR(255) NOT NULL,
    "email" VARCHAR(320) NOT NULL,
    CONSTRAINT "PK_payment_method" PRIMARY KEY ("payment_id"),
    CONSTRAINT "FK_payment_method_user" FOREIGN KEY ("email") REFERENCES "user" ("email")
);

-- Table 'purchase'
CREATE TABLE "purchase" (
    "purchase_id" SERIAL NOT NULL,
    "total_price" DECIMAL(13,2) NOT NULL DEFAULT 1,
    "purchase_time" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "product_time" DECIMAL(7,2) NOT NULL,
    "product_quantity" INT NOT NULL,
    "payment_id" INT NOT NULL,
    "email" VARCHAR(320) NOT NULL,
    CONSTRAINT "PK_purchase" PRIMARY KEY ("purchase_id"),
    CONSTRAINT "FK_purchase_payment_method" FOREIGN KEY ("payment_id") REFERENCES "payment_method" ("payment_id"),
    CONSTRAINT "FK_purchase_user" FOREIGN KEY ("email") REFERENCES "user" ("email")
);

-- Table 'user_address'
CREATE TABLE "user_address" (
    "email" VARCHAR(320) NOT NULL,
    "street_address" VARCHAR(255) NOT NULL,
    "apartment" VARCHAR(20) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "city" VARCHAR(100) NOT NULL,
    "state" CHAR(2) NOT NULL,
    "postal_code" CHAR(5) NOT NULL,
    CONSTRAINT "PK_user_address" PRIMARY KEY ("email"),
    CONSTRAINT "FK_user_address_user" FOREIGN KEY ("email") REFERENCES "user" ("email")
);

-- Table 'product_has_purchase'
CREATE TABLE "product_has_purchase" (
    "code" CHAR(12) NOT NULL,
    "purchase_id" SERIAL NOT NULL,
    CONSTRAINT "PK_product_has_purchase" PRIMARY KEY ("code", "purchase_id"),
    CONSTRAINT "FK_product_has_purchase_product" FOREIGN KEY ("code") REFERENCES "product" ("code"),
    CONSTRAINT "FK_product_has_purchase_purchase" FOREIGN KEY ("purchase_id") REFERENCES "purchase" ("purchase_id")
);
